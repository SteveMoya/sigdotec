---
import { sendEmailVerificationEmail } from "@/lib/email/sendEmail";
import { createVerificationToken } from "@/lib/auth/lucia";

import Layout from "@layouts/Layout.astro";
import VerifyEmail from "@/components/VerifyEmail";
import { Toaster } from "sonner";
import type { only } from "node:test";

const user = Astro.locals.user;

if (!user) {
  return Astro.redirect("/iniciar-sesion", 302);
}
if (user.emailVerificated) {
  return Astro.redirect("/app/", 302);
}

try {
  const token = await createVerificationToken(user.email, "4h");

  if (Astro.request.method === "POST") {
    try {
      await sendEmailVerificationEmail(
        user.email,
        token.toString(),
        user.username,
      );
      return new Response(
        "Email de Verificación enviado, por favor revisa tu correo electronico",
        { status: 200 },
      );
    } catch (error) {
      console.log(error);
      return new Response("Error al enviar tu email de Verificación", {
        status: 400,
      });
    }
  }

  // Renderiza la página de verificación de correo electrónico aquí
} catch (error) {
  console.error(error);
  return new Response("Error interno del servidor", { status: 500 });
}
---

<Layout>
  <div class="flex justify-center content-center my-[6dvh]">
    <VerifyEmail email={user.email} client:only transition:persist />
  </div>
  <Toaster
    richColors
    closeButton
    toastOptions={{
      classNames: {
        success: "bg-success-600",
        error: "bg-danger-600",
        loading: "bg-secondary-200",
      },
    }}
    client:only
  />
</Layout>
