---
import { AllTransactonsChart } from "@/components/Charts/AllTransactionsCharts";
import AppLayout from "@layouts/App/AppLayout.astro";
import { DB } from "@/services/db.services";
import { NewTransaccion } from "@/components/Tables/RecentsTransactions/NewTransaccion";
import { TransactionalTable } from "@/components/Tables/TransactionalsTable/DataTable";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Charts } from "@/services/charts.services";
import { type ChartConfig } from "@/components/ui/chart";
const allTransactions = await DB.getAllTransactions();

const chartData = await Charts.getChartTransactions();
console.log(chartData);

const chartConfig = {
  visitors: { label: "Visitors" },
  total: { label: "Total Transacciones", color: "hsl(var(--chart-2))" },
  newTransactionsPercentage: {
    label: "Porcentaje de Transacciones Nuevas",
    color: "hsl(var(--chart-1))",
  },
} satisfies ChartConfig;
---

<AppLayout
  title="Cartera de planes realizados"
  description="Esta es la vista de administraciÃ³n de la cartera de los ingresos de la aplicacion."
>
  <Card className="w-full bg-slate-700 border border-gray-700  p-4">
    <AllTransactonsChart
      chartConfig={chartConfig}
      chartData={chartData}
      client:load
    />
    <Card className="w-full bg-slate-800 border border-gray-700 mt-4 shadow-xl">
      <div class="flex items-center justify-between">
        <CardHeader>
          <CardTitle>Tabla de Transacciones</CardTitle>
          <CardDescription>
            Esta tabla muestra todas las transacciones
          </CardDescription>
        </CardHeader>
        <NewTransaccion client:load />
      </div>
      <CardContent>
        <TransactionalTable data={allTransactions ?? []} client:load />
      </CardContent>
    </Card>
  </Card>
</AppLayout>
