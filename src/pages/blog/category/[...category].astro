---
import Layout from '@layouts/Layout.astro'
import ArticleCard from '@components/Blog/ArticleCard.astro'
import { getCollection, getEntry } from 'astro:content'
import type { CollectionEntry } from 'astro:content'
import { capitalize } from '@utils/utils'
import Container from '@components/ui/Container.astro'
import BackButton from '@components/ui/BackButton.astro'
import { getEntries } from 'astro:content'

const allBlogArticles: CollectionEntry<'blog'>[] = (
  await getCollection('blog')
).sort(
  (a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
)
const { category } = Astro.params

const categoryArticles = allBlogArticles.filter((article) =>
  article.data.category.includes(category)
)

if (category === undefined) {
  throw new Error('Categoria no definida')
}

const author = await getEntry(categoryArticles[0].data.author)

const AuthorData = await getEntries([author])
---

<Layout
  title=`Categoria de ${category}`
  description=`Estas en la Categoria de ${category} en el blog de mi sitio web. Aqui encontraras articulos relacionados con ${category}`
>
  <Container>
    <BackButton />
    <h1 class='text-2xl pb-3'>{capitalize(category)}</h1>
    <div class='grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3'>
      {
        categoryArticles.map((article) => (
          <ArticleCard article={article} authorData={AuthorData[0]} />
        ))
      }
    </div>
  </Container>
</Layout>
