---
import Layout from '@layouts/Layout.astro'
import ArticleCard from '@components/Blog/ArticleCard.astro'
import { getCollection, getEntry } from 'astro:content'
import type { CollectionEntry } from 'astro:content'
import { capitalize } from '@utils/utils'
import Container from '@components/ui/Container.astro'
import BackButton from '@components/ui/BackButton.astro'
import { getEntries } from 'astro:content'

const { tag } = Astro.params

if (tag === undefined) {
  throw new Error('Tag es requerido')
}

const allBlogArticles: CollectionEntry<'blog'>[] = (
  await getCollection('blog')
).sort(
  (a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
)

const tagArticles = allBlogArticles.filter((article) =>
  article.data.tags.includes(tag)
)

const author = await getEntry(tagArticles[0].data.author)

const AuthorData = await getEntries([author])
---

<Layout
  title=`Etiqueta ${capitalize(tag)}`
  description=`Estas buscando la Etiqueta ${capitalize(tag)}`
>
  <Container>
    <BackButton />
    <h1 class='text-2xl pb-3'>#{capitalize(tag)}</h1>
    <div class='grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3'>
      {
        tagArticles.map((article) => (
          <ArticleCard article={article} authorData={AuthorData[0]} />
        ))
      }
    </div>
  </Container>
</Layout>
