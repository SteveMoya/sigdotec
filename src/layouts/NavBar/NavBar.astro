---
import Logo from "@components/ui/Logo.astro";
import BtnLink from "./BtnLink.astro";
import Container from "@components/ui/Container.astro";
import Navitem from "./Navitem.astro";
import Button from "@components/ui/Button.astro";
// ! TODO: Colocar animacion Scroll con CSS Nativo
const position = "left";

import NavItems from "@config/NavItems.json";
import Avatar from "@/components/ui/Avatar.astro";

const user = Astro.locals.user;
---

<header
  class="bg-gray-50 dark:bg-gray-900 inset-x-0 top-0 z-50 py-4 sticky font-montserrat transition-all shadow-3xl dark:border-b-2 dark:border-shank-950 border-b-2 border-shank-50 dark:shadow-2xl dark:bg-opacity-90 bg-opacity-90"
  id="navbar"
>
  <Container>
    <nav class="w-full flex justify-between gap-6 relative">
      <!-- logo -->
      <div class="min-w-max inline-flex relative">
        <a href="/" class="flex items-center gap-3 z-50">
          <Logo size={"w-10"} variant={"primary"} />
        </a>
      </div>

      <div
        data-nav-overlay
        aria-hidden="true"
        class="fixed hidden inset-0 bg-shank-950 bg-opacity-80 backdrop-filter backdrop-blur-xl"
      >
      </div>
      <div
        data-navbar
        class="flex h-0 overflow-hidden lg:h-auto lg:scale-y-100 duration-300 ease-linear flex-col gap-y-6 gap-x-4 lg:flex-row w-full lg:justify-between lg:items-center absolute lg:relative top-full lg:top-0 max-lg:bg-slate-200 max-lg:dark:bg-slate-700 lg:bg-transparent border-x border-x-primary-50 lg:border-x-0 rounded-2xl"
      >
        <ul
          class="border-t border-primary-50 lg:border-t-0 px-6 lg:px-0 pt-6 lg:pt-0 flex flex-col lg:flex-row gap-y-4 gap-x-3 text-lg w-full lg:justify-center lg:items-center"
        >
          {
            NavItems.map((item) => {
              if (item.href && item.text) {
                return <Navitem href={item.href} text={item.text} />;
              }
              return null;
            })
          }
        </ul>
        <div
          class="lg:min-w-max flex items-center sm:w-max w-full pb-6 lg:pb-0 border-b border-shank-900 lg:border-0 px-6 lg:px-0"
        >
        </div>
      </div>
      <div
        class:list={[
          { "ml-auto": position === "left" },
          "flex items-center md:mb-0 w-full md:w-auto md:static justify-end left-0 bottom-0 md:p-0 gap-4",
        ]}
      >
        {
          user ? (
            <div class="flex items-center w-[300px] gap-2">
              <div class="flex items-center">
                <Button variant="primary" href="/app/" className="h-11">
                  Dashboard
                </Button>
              </div>
              <div class="flex items-center gap-2">
                {user?.userimage ? (
                  <Avatar src={user?.userimage} alt={user?.username} />
                ) : (
                  <Avatar alt={user?.username} />
                )}
                <span class="text-sm font-semibold hidden md:flex">
                  {user?.username}
                </span>
              </div>
            </div>
          ) : (
            <>
              <span class="rtl:ml-0 rtl:mr-4 py-2.5 px-5.5 font-semibold shadow-none text-sm w-full">
                <Button variant="primary" href="/login">
                  Iniciar
                </Button>
              </span>
              <span class="rtl:ml-0 rtl:mr-4 py-2.5 px-5.5 font-semibold shadow-none text-sm w-auto">
                <Button variant="secondary" href="/register">
                  Registrarse
                </Button>
              </span>
            </>
          )
        }
      </div>
      <div class="min-w-max flex items-center max-lg:justify-end gap-x-3">
        <button
          data-toggle-nav
          data-open-nav="false"
          class="lg:hidden lg:invisible outline-none w-7 h-auto flex flex-col relative"
        >
          <span
            id="line1"
            class="w-6 h-0.5 rounded-full dark:bg-primary-50 bg-shank-950 transition-all duration-300 ease-linear"
          ></span>
          <span
            id="line2"
            class="w-6 origin-center mt-1 h-0.5 rounded-full dark:bg-primary-50 bg-shank-950 transition-all duration-300 ease-linear"
          ></span>
          <span
            id="line3"
            class="w-6 mt-1 h-0.5 rounded-full dark:bg-primary-50 bg-shank-950 transition-all duration-300 ease-linear"
          ></span>
          <span class="sr-only">togglenav</span>
        </button>
      </div>
    </nav>
  </Container>
</header>

<style>
  /* Estilo inicial de la barra de navegaci√≥n */
  #navbar {
    /* Color inicial */
    animation: colorChange auto linear;
    animation-timeline: scroll();
    animation-range: 0;
  }
  @keyframes colorChange {
    0% {
      background-color: rgb(17 24 39);
    }
    100% {
      background-color: rgba(0, 0, 0, 0.617);
    }
  }
 
  [data-toggle-nav][data-open-nav="true"] #line1 {
    transform: translateY(0.375rem) rotate(40deg);
  }
  [data-toggle-nav][data-open-nav="true"] #line2 {
    transform: scaleX(0);
    opacity: 0;
  }
  [data-toggle-nav][data-open-nav="true"] #line3 {
    transform: translateY(-0.375rem) rotate(-40deg);
  }

  [data-nav-overlay][data-is-visible="true"] {
    visibility: visible;
    display: flex;
  }
</style>

<script lang="ts">
  //Toggle Menu
  const toggleMenu = document.querySelector("[data-toggle-nav]");
  const navbar = document.querySelector("[data-navbar]");
  const overlayNav = document.querySelector("[data-nav-overlay]");
  if (toggleMenu) {
    toggleMenu.addEventListener("click", (e) => {
      e.preventDefault();
      if (toggleMenu.getAttribute("data-open-nav") === "false") {
        toggleMenu.setAttribute("data-open-nav", "true");
        overlayNav.setAttribute("data-is-visible", "true");
        document.body.classList.add("!overflow-y-hidden");
        navbar.style.height = `${navbar.scrollHeight}px`;
      } else {
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
        navbar.style.height = "0px";
      }
    });

    overlayNav.addEventListener("click", (e) => {
      e.preventDefault();
      toggleMenu.setAttribute("data-open-nav", "false");
      overlayNav.setAttribute("data-is-visible", "false");
      document.body.classList.remove("!overflow-y-hidden");
      navbar.style.height = "0px";
    });
  }
</script>
